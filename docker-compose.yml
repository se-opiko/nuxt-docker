# version: '3.9'

services:
  nuxt:
    container_name: nuxt
    build: docker/nuxt
    volumes:
      - ./front:/app:cached
      - nuxt_node_modules:/app/node_modules
    ports:
      - "80:3000"
      - "24678:24678"
    tty: true
    environment:
      - HOST=0.0.0.0
      - port=80
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "npm install && npm run dev"

  api:
    build: 
      context: .
      dockerfile: ./docker/api/Dockerfile
    container_name: api
    depends_on:
      - mysql
    volumes:
      - type: volume
        source: api_data
        target: /var/run/php-fpm
        volume:
          nocopy: true
      - type: bind
        source: ./api
        target: /work/api
      - type: volume
        source: api_vendor
        target: /work/api/vendor
        volume:
          nocopy: true
      - type: volume
        source: psysh-store
        target: /root/.config/psysh
        volume:
          nocopy: true
    command: sh -c "
      if [ ! -f .env ]; then
        echo '.envファイルが見つかりません。.env.exampleからコピーします...';
        cp .env.example .env;
      fi &&
      echo 'Composer依存関係をインストール中...' &&
      composer install &&
      echo 'Laravelアプリケーションキーを生成中...' &&
      php artisan key:generate --force &&
      echo 'MySQLデータベース接続を待機中...' &&
      until php -r 'try { new PDO(\"mysql:host=mysql;port=3306;dbname=myapp\", \"user\", \"password\"); echo \"connected\"; } catch (Exception \$e) { exit(1); }' > /dev/null 2>&1; do
        echo 'MySQLデータベースの準備を待機中...';
        sleep 3;
      done &&
      echo 'データベースマイグレーション実行中...' &&
      php artisan migrate --force &&
      echo 'PHP-FPMを起動中...' &&
      php-fpm"

  proxy:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    container_name: proxy
    ports:
     - ${WEB_PORT}:80
     - "9000:9000"
    volumes:
      - type: volume
        source: api_data
        target: /var/run/php-fpm
        volume:
          nocopy: true
      - type: bind
        source: ./api
        target: /work/api
  mysql:
    image: mysql:8.0
    container_name: mysql
    volumes:
      - ./docker/db/data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/db/sql:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=myapp
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - TZ='Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"

volumes:
  nuxt_node_modules:
  mysql_data:
  api_data:
  api_vendor:
  psysh-store: